datatable(options = list(pageLength = 10, autoWidth = TRUE))
# ライブラリ読み込み
library(readxl)
library(dplyr)
library(DT)
# Excelファイルの読み込み
file_path <- "バイク年式;燃費 .xlsx"
sheet_names <- excel_sheets(file_path)
# 各シートを読み込み、メーカー列を追加
all_sheets <- lapply(sheet_names, function(sheet) {
df <- read_excel(file_path, sheet = sheet)
df$メーカー <- sheet
df
})
all_bikes <- bind_rows(all_sheets)
# 列名を標準化（列の順番に応じて調整が必要な場合あり）
all_bikes <- all_bikes %>%
rename(
車種 = 1,
年式 = 2,
燃費 = 3,
タンク容量 = 4,
航続距離 = 5,
排気量 = 6
) %>%
mutate(
年式 = as.numeric(年式),
燃費 = as.numeric(燃費),
タンク容量 = as.numeric(タンク容量),
航続距離 = as.numeric(航続距離),
排気量 = as.numeric(排気量)
)
# 各項目をスコア化（年式、燃費、タンク容量、航続距離、排気量＝7段階）
all_bikes <- all_bikes %>%
mutate(
年式スコア = case_when(
年式 >= 2020 ~ 5,
年式 >= 2015 ~ 4,
年式 >= 2010 ~ 3,
年式 >= 2000 ~ 2,
年式 >= 1990 ~ 1,
TRUE ~ 0
),
燃費スコア = case_when(
燃費 >= 40 ~ 5,
燃費 >= 35 ~ 4,
燃費 >= 30 ~ 3,
燃費 >= 25 ~ 2,
燃費 >= 20 ~ 1,
TRUE ~ 0
),
タンクスコア = case_when(
タンク容量 >= 20 ~ 5,
タンク容量 >= 17 ~ 4,
タンク容量 >= 14 ~ 3,
タンク容量 >= 10 ~ 2,
タンク容量 >= 5 ~ 1,
TRUE ~ 0
),
航続スコア = case_when(
航続距離 >= 500 ~ 5,
航続距離 >= 400 ~ 4,
航続距離 >= 300 ~ 3,
航続距離 >= 200 ~ 2,
航続距離 >= 100 ~ 1,
TRUE ~ 0
),
排気量スコア = case_when(
排気量 <= 50 ~ 1,
排気量 <= 125 ~ 2,
排気量 <= 250 ~ 3,
排気量 <= 400 ~ 4,
排気量 <= 750 ~ 5,
排気量 <= 1000 ~ 6,
排気量 > 1000 ~ 7,
TRUE ~ NA_real_
),
合計スコア = 年式スコア + 燃費スコア + タンクスコア + 航続スコア + 排気量スコア
)
# 表形式で表示（インタラクティブ）
datatable(
all_bikes %>%
select(メーカー, 車種, 年式, 燃費, タンク容量, 航続距離, 排気量,
年式スコア, 燃費スコア, タンクスコア, 航続スコア, 排気量スコア, 合計スコア),
options = list(pageLength = 15),
caption = "バイクのスペック評価（スコア一覧）"
)
# ライブラリ読み込み
library(readxl)
library(dplyr)
library(DT)
# Excelファイルの読み込み
file_path <- "バイク年式;燃費 .xlsx"
sheet_names <- excel_sheets(file_path)
# 各シートを読み込み、メーカー列を追加
all_sheets <- lapply(sheet_names, function(sheet) {
df <- read_excel(file_path, sheet = sheet)
df$メーカー <- sheet
df
})
all_bikes <- bind_rows(all_sheets)
# 列名を標準化（列の順番に応じて調整が必要な場合あり）
all_bikes <- all_bikes %>%
rename(
車種 = 1,
年式 = 2,
燃費 = 3,
タンク容量 = 4,
航続距離 = 5,
排気量 = 6
) %>%
mutate(
年式 = as.numeric(年式),
燃費 = as.numeric(燃費),
タンク容量 = as.numeric(タンク容量),
航続距離 = as.numeric(航続距離),
排気量 = as.numeric(排気量)
)
# 各項目をスコア化（年式、燃費、タンク容量、航続距離、排気量＝7段階）
all_bikes <- all_bikes %>%
mutate(
年式スコア = case_when(
年式 >= 2020 ~ 5,
年式 >= 2015 ~ 4,
年式 >= 2010 ~ 3,
年式 >= 2000 ~ 2,
年式 >= 1990 ~ 1,
TRUE ~ 0
),
燃費スコア = case_when(
燃費 >= 40 ~ 5,
燃費 >= 35 ~ 4,
燃費 >= 30 ~ 3,
燃費 >= 25 ~ 2,
燃費 >= 20 ~ 1,
TRUE ~ 0
),
タンクスコア = case_when(
タンク容量 >= 20 ~ 5,
タンク容量 >= 17 ~ 4,
タンク容量 >= 14 ~ 3,
タンク容量 >= 10 ~ 2,
タンク容量 >= 5 ~ 1,
TRUE ~ 0
),
航続スコア = case_when(
航続距離 >= 500 ~ 5,
航続距離 >= 400 ~ 4,
航続距離 >= 300 ~ 3,
航続距離 >= 200 ~ 2,
航続距離 >= 100 ~ 1,
TRUE ~ 0
),
排気量スコア = case_when(
排気量 <= 50 ~ 1,
排気量 <= 125 ~ 2,
排気量 <= 250 ~ 3,
排気量 <= 400 ~ 4,
排気量 <= 750 ~ 5,
排気量 <= 1000 ~ 6,
排気量 > 1000 ~ 7,
TRUE ~ NA_real_
),
合計スコア = 年式スコア + 燃費スコア + タンクスコア + 航続スコア + 排気量スコア
)
# 表形式で表示（インタラクティブ）
datatable(
all_bikes %>%
select(メーカー, 車種, 年式, 燃費, タンク容量, 航続距離, 排気量,
年式スコア, 燃費スコア, タンクスコア, 航続スコア, 排気量スコア, 合計スコア),
options = list(pageLength = 15),
caption = "バイクのスペック評価（スコア一覧）"
)
# ライブラリ読み込み
library(readxl)
library(dplyr)
library(DT)
# Excelファイルの読み込み
file_path <- "バイク年式;燃費 .xlsx"
sheet_names <- excel_sheets(file_path)
# 各シートを読み込み、メーカー列を追加
all_sheets <- lapply(sheet_names, function(sheet) {
df <- read_excel(file_path, sheet = sheet)
df$メーカー <- sheet
df
})
all_bikes <- bind_rows(all_sheets)
# 列名を標準化（列の順番に応じて調整が必要な場合あり）
all_bikes <- all_bikes %>%
rename(
車種 = 1,
年式 = 2,
燃費 = 3,
タンク容量 = 4,
航続距離 = 5,
排気量 = 6
) %>%
mutate(
年式 = as.numeric(年式),
燃費 = as.numeric(燃費),
タンク容量 = as.numeric(タンク容量),
航続距離 = as.numeric(航続距離),
排気量 = as.numeric(排気量)
)
# 各項目をスコア化（年式、燃費、タンク容量、航続距離、排気量＝7段階）
all_bikes <- all_bikes %>%
mutate(
年式スコア = case_when(
年式 >= 2020 ~ 5,
年式 >= 2015 ~ 4,
年式 >= 2010 ~ 3,
年式 >= 2000 ~ 2,
年式 >= 1990 ~ 1,
TRUE ~ 0
),
燃費スコア = case_when(
燃費 >= 40 ~ 5,
燃費 >= 35 ~ 4,
燃費 >= 30 ~ 3,
燃費 >= 25 ~ 2,
燃費 >= 20 ~ 1,
TRUE ~ 0
),
タンクスコア = case_when(
タンク容量 >= 20 ~ 5,
タンク容量 >= 17 ~ 4,
タンク容量 >= 14 ~ 3,
タンク容量 >= 10 ~ 2,
タンク容量 >= 5 ~ 1,
TRUE ~ 0
),
航続スコア = case_when(
航続距離 >= 500 ~ 5,
航続距離 >= 400 ~ 4,
航続距離 >= 300 ~ 3,
航続距離 >= 200 ~ 2,
航続距離 >= 100 ~ 1,
TRUE ~ 0
),
排気量スコア = case_when(
排気量 <= 50 ~ 1,
排気量 <= 125 ~ 2,
排気量 <= 250 ~ 3,
排気量 <= 400 ~ 4,
排気量 <= 750 ~ 5,
排気量 <= 1000 ~ 6,
排気量 > 1000 ~ 7,
TRUE ~ NA_real_
),
合計スコア = 年式スコア + 燃費スコア + タンクスコア + 航続スコア + 排気量スコア
)
# 表形式で表示（インタラクティブ）
datatable(
all_bikes %>%
select(メーカー, 車種, 年式, 燃費, タンク容量, 航続距離, 排気量,
年式スコア, 燃費スコア, タンクスコア, 航続スコア, 排気量スコア, 合計スコア),
options = list(pageLength = 15),
caption = "バイクのスペック評価（スコア一覧）"
)
.rs.restartR()
pkgbuild::has_build_tools(debug = TRUE)
install.packages("fastmap", type = "source")
install.packages("fastmap", type = "source")
packageVersion("fastmap")
remove.packages("fastmap")
pkgbuild::has_build_tools(debug = TRUE)
install.packages("fastmap", type = "source")
install.packages("fastmap", type = "source")
packageVersion("fastmap")
install.packages("fastmap")
packageVersion("fastmap")
# ライブラリ読み込み
library(readxl)
library(dplyr)
library(DT)
# Excelファイルの読み込み
file_path <- "バイク年式;燃費 .xlsx"
sheet_names <- excel_sheets(file_path)
# 各シートを読み込み、メーカー列を追加
all_sheets <- lapply(sheet_names, function(sheet) {
df <- read_excel(file_path, sheet = sheet)
df$メーカー <- sheet
df
})
all_bikes <- bind_rows(all_sheets)
# 列名を標準化（列の順番に応じて調整が必要な場合あり）
all_bikes <- all_bikes %>%
rename(
車種 = 1,
年式 = 2,
燃費 = 3,
タンク容量 = 4,
航続距離 = 5,
排気量 = 6
) %>%
mutate(
年式 = as.numeric(年式),
燃費 = as.numeric(燃費),
タンク容量 = as.numeric(タンク容量),
航続距離 = as.numeric(航続距離),
排気量 = as.numeric(排気量)
)
# 各項目をスコア化（年式、燃費、タンク容量、航続距離、排気量＝7段階）
all_bikes <- all_bikes %>%
mutate(
年式スコア = case_when(
年式 >= 2020 ~ 5,
年式 >= 2015 ~ 4,
年式 >= 2010 ~ 3,
年式 >= 2000 ~ 2,
年式 >= 1990 ~ 1,
TRUE ~ 0
),
燃費スコア = case_when(
燃費 >= 40 ~ 5,
燃費 >= 35 ~ 4,
燃費 >= 30 ~ 3,
燃費 >= 25 ~ 2,
燃費 >= 20 ~ 1,
TRUE ~ 0
),
タンクスコア = case_when(
タンク容量 >= 20 ~ 5,
タンク容量 >= 17 ~ 4,
タンク容量 >= 14 ~ 3,
タンク容量 >= 10 ~ 2,
タンク容量 >= 5 ~ 1,
TRUE ~ 0
),
航続スコア = case_when(
航続距離 >= 500 ~ 5,
航続距離 >= 400 ~ 4,
航続距離 >= 300 ~ 3,
航続距離 >= 200 ~ 2,
航続距離 >= 100 ~ 1,
TRUE ~ 0
),
排気量スコア = case_when(
排気量 <= 50 ~ 1,
排気量 <= 125 ~ 2,
排気量 <= 250 ~ 3,
排気量 <= 400 ~ 4,
排気量 <= 750 ~ 5,
排気量 <= 1000 ~ 6,
排気量 > 1000 ~ 7,
TRUE ~ NA_real_
),
合計スコア = 年式スコア + 燃費スコア + タンクスコア + 航続スコア + 排気量スコア
)
# 表形式で表示（インタラクティブ）
datatable(
all_bikes %>%
select(メーカー, 車種, 年式, 燃費, タンク容量, 航続距離, 排気量,
年式スコア, 燃費スコア, タンクスコア, 航続スコア, 排気量スコア, 合計スコア),
options = list(pageLength = 15),
caption = "バイクのスペック評価（スコア一覧）"
)
# 必要なパッケージ
library(dplyr)
library(DT)
# データ処理 + 表を作成
all_bikes %>%
group_by(メーカー) %>%
summarise(平均燃費 = mean(燃費, na.rm = TRUE)) %>%
arrange(desc(平均燃費)) %>%
datatable(options = list(pageLength = 10, autoWidth = TRUE))
# ライブラリ読み込み
library(readxl)
library(dplyr)
library(DT)
# Excelファイルの読み込み
file_path <- "バイク年式;燃費 .xlsx"
sheet_names <- excel_sheets(file_path)
# 各シートを読み込み、メーカー列を追加
all_sheets <- lapply(sheet_names, function(sheet) {
df <- read_excel(file_path, sheet = sheet)
df$メーカー <- sheet
df
})
all_bikes <- bind_rows(all_sheets)
# 列名を標準化（列の順番に応じて調整が必要な場合あり）
all_bikes <- all_bikes %>%
rename(
車種 = 1,
年式 = 2,
燃費 = 3,
タンク容量 = 4,
航続距離 = 5,
排気量 = 6
) %>%
mutate(
年式 = as.numeric(年式),
燃費 = as.numeric(燃費),
タンク容量 = as.numeric(タンク容量),
航続距離 = as.numeric(航続距離),
排気量 = as.numeric(排気量)
)
# 各項目をスコア化（年式、燃費、タンク容量、航続距離、排気量＝7段階）
all_bikes <- all_bikes %>%
mutate(
年式スコア = case_when(
年式 >= 2020 ~ 5,
年式 >= 2015 ~ 4,
年式 >= 2010 ~ 3,
年式 >= 2000 ~ 2,
年式 >= 1990 ~ 1,
TRUE ~ 0
),
燃費スコア = case_when(
燃費 >= 40 ~ 5,
燃費 >= 35 ~ 4,
燃費 >= 30 ~ 3,
燃費 >= 25 ~ 2,
燃費 >= 20 ~ 1,
TRUE ~ 0
),
タンクスコア = case_when(
タンク容量 >= 20 ~ 5,
タンク容量 >= 17 ~ 4,
タンク容量 >= 14 ~ 3,
タンク容量 >= 10 ~ 2,
タンク容量 >= 5 ~ 1,
TRUE ~ 0
),
航続スコア = case_when(
航続距離 >= 500 ~ 5,
航続距離 >= 400 ~ 4,
航続距離 >= 300 ~ 3,
航続距離 >= 200 ~ 2,
航続距離 >= 100 ~ 1,
TRUE ~ 0
),
排気量スコア = case_when(
排気量 <= 50 ~ 1,
排気量 <= 125 ~ 2,
排気量 <= 250 ~ 3,
排気量 <= 400 ~ 4,
排気量 <= 750 ~ 5,
排気量 <= 1000 ~ 6,
排気量 > 1000 ~ 7,
TRUE ~ NA_real_
),
合計スコア = 年式スコア + 燃費スコア + タンクスコア + 航続スコア + 排気量スコア
)
# 表形式で表示（インタラクティブ）
datatable(
all_bikes %>%
select(メーカー, 車種, 年式, 燃費, タンク容量, 航続距離, 排気量,
年式スコア, 燃費スコア, タンクスコア, 航続スコア, 排気量スコア, 合計スコア),
options = list(pageLength = 15),
caption = "バイクのスペック評価（スコア一覧）"
)
library(dplyr)
library(DT)
# 排気量帯を追加
all_bikes <- all_bikes %>%
mutate(
排気量帯 = case_when(
排気量 <= 50 ~ "〜50cc",
排気量 <= 125 ~ "51〜125cc",
排気量 <= 250 ~ "126〜250cc",
排気量 <= 400 ~ "251〜400cc",
排気量 <= 750 ~ "401〜750cc",
排気量 <= 1000 ~ "751〜1000cc",
排気量 > 1000 ~ "1001cc〜",
TRUE ~ "不明"
)
)
# 平均燃費を排気量帯ごとに計算し、インタラクティブ表に
all_bikes %>%
group_by(排気量帯) %>%
summarise(平均燃費 = mean(燃費, na.rm = TRUE)) %>%
arrange(排気量帯) %>%
datatable(
caption = "排気量帯別の平均燃費（km/L）",
options = list(pageLength = 10, autoWidth = TRUE)
)
library(dplyr)
library(DT)
# 排気量帯を追加
all_bikes <- all_bikes %>%
mutate(
排気量帯 = case_when(
排気量 <= 50 ~ "〜50cc",
排気量 <= 125 ~ "51〜125cc",
排気量 <= 250 ~ "126〜250cc",
排気量 <= 400 ~ "251〜400cc",
排気量 <= 750 ~ "401〜750cc",
排気量 <= 1000 ~ "751〜1000cc",
排気量 > 1000 ~ "1001cc〜",
TRUE ~ "不明"
)
)
# 平均燃費を排気量帯ごとに計算し、インタラクティブ表に
all_bikes %>%
group_by(排気量帯) %>%
summarise(平均燃費 = mean(燃費, na.rm = TRUE)) %>%
arrange(排気量帯) %>%
datatable(
caption = "排気量帯別の平均燃費（km/L）",
options = list(pageLength = 10, autoWidth = TRUE)
)
# 年式ごとの平均燃費を折れ線で表示
all_bikes %>%
group_by(年式) %>%
summarise(平均燃費 = mean(燃費, na.rm = TRUE)) %>%
ggplot(aes(x = 年式, y = 平均燃費)) +
geom_line(color = "darkgreen") +
geom_point() +
labs(title = "年式別 平均燃費の推移", x = "年式", y = "平均燃費（km/L）") +
theme_minimal()
install.packages("ggplot2")
